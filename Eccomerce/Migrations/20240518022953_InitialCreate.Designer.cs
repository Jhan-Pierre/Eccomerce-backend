// <auto-generated />
using System;
using Eccomerce.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eccomerce.Migrations
{
    [DbContext(typeof(DbEccomerceContext))]
    [Migration("20240518022953_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eccomerce.Models.TbModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__tb_modul__3213E83F43A81771");

                    b.HasIndex(new[] { "Name" }, "UQ__tb_modul__72E12F1B76F214DE")
                        .IsUnique();

                    b.ToTable("tb_module", (string)null);
                });

            modelBuilder.Entity("Eccomerce.Models.TbPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__tb_permi__3213E83F88405BCA");

                    b.HasIndex("ModuleId");

                    b.HasIndex(new[] { "Name" }, "UQ__tb_permi__72E12F1B34CF7E69")
                        .IsUnique();

                    b.ToTable("tb_permission", (string)null);
                });

            modelBuilder.Entity("Eccomerce.Models.TbRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__tb_role__3213E83F7E51A857");

                    b.HasIndex(new[] { "Name" }, "UQ__tb_role__72E12F1B45DD89E8")
                        .IsUnique();

                    b.ToTable("tb_role", (string)null);
                });

            modelBuilder.Entity("Eccomerce.Models.TbRolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("PermissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("permission_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("PK__tb_role___3213E83FDD340459");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("tb_role_permission", (string)null);
                });

            modelBuilder.Entity("Eccomerce.Models.TbShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__tb_shift__3213E83F10078CE2");

                    b.HasIndex(new[] { "Name" }, "UQ__tb_shift__72E12F1BF47B25B9")
                        .IsUnique();

                    b.ToTable("tb_shift", (string)null);
                });

            modelBuilder.Entity("Eccomerce.Models.TbState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__tb_state__3213E83F91740684");

                    b.HasIndex(new[] { "Name" }, "UQ__tb_state__72E12F1B269BE59F")
                        .IsUnique();

                    b.ToTable("tb_state", (string)null);
                });

            modelBuilder.Entity("Eccomerce.Models.TbUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .HasColumnName("phone")
                        .IsFixedLength();

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int")
                        .HasColumnName("shift_id");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("state_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK__tb_user__3213E83F88F1299A");

                    b.HasIndex("RoleId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("StateId");

                    b.HasIndex(new[] { "Email" }, "UQ__tb_user__AB6E61649E1D72D7")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__tb_user__B43B145FEE1267BE")
                        .IsUnique();

                    b.ToTable("tb_user", (string)null);
                });

            modelBuilder.Entity("Eccomerce.Models.TbPermission", b =>
                {
                    b.HasOne("Eccomerce.Models.TbModule", "Module")
                        .WithMany("TbPermissions")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK__tb_permis__modul__440B1D61");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Eccomerce.Models.TbRolePermission", b =>
                {
                    b.HasOne("Eccomerce.Models.TbPermission", "Permission")
                        .WithMany("TbRolePermissions")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK__tb_role_p__permi__47DBAE45");

                    b.HasOne("Eccomerce.Models.TbRole", "Role")
                        .WithMany("TbRolePermissions")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__tb_role_p__role___46E78A0C");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Eccomerce.Models.TbUser", b =>
                {
                    b.HasOne("Eccomerce.Models.TbRole", "Role")
                        .WithMany("TbUsers")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__tb_user__role_id__4CA06362");

                    b.HasOne("Eccomerce.Models.TbShift", "Shift")
                        .WithMany("TbUsers")
                        .HasForeignKey("ShiftId")
                        .HasConstraintName("FK__tb_user__shift_i__4E88ABD4");

                    b.HasOne("Eccomerce.Models.TbState", "State")
                        .WithMany("TbUsers")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK__tb_user__state_i__4D94879B");

                    b.Navigation("Role");

                    b.Navigation("Shift");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Eccomerce.Models.TbModule", b =>
                {
                    b.Navigation("TbPermissions");
                });

            modelBuilder.Entity("Eccomerce.Models.TbPermission", b =>
                {
                    b.Navigation("TbRolePermissions");
                });

            modelBuilder.Entity("Eccomerce.Models.TbRole", b =>
                {
                    b.Navigation("TbRolePermissions");

                    b.Navigation("TbUsers");
                });

            modelBuilder.Entity("Eccomerce.Models.TbShift", b =>
                {
                    b.Navigation("TbUsers");
                });

            modelBuilder.Entity("Eccomerce.Models.TbState", b =>
                {
                    b.Navigation("TbUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
